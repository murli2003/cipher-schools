
Descripitive Stastistics - Mean

Defination:

The mean is the average of a set of numbers.It is calculated by summing all the numbers and diciding by the count of numbers.

Use Case:

The mean is used in market analysis to summarize the average value of a dataset, such as average customer age or average income.


import pandas as pd
#Sample Data
data = {
    'Age' : [25, 30, 35, 50, 28, 40, 50, 60, 32, 45],
    'Salary' : [50000, 1200000, 70000, 60000, 80000, 55000, 85000, 90000, 150000, 62000]
}
df= pd.DataFrame(data)
#Mean
mean_age = df['Age'].mean()
mean_salary = df['Salary'].mean()
print("mean age", mean_age)
print("mean salary",mean_salary)

     
mean age 39.5
mean salary 190200.0
Descriptive Statistics - Median

Defination:

The median is the middle value in a set of number. it separates the higher half from the lower half of the dataset.

Use Case:

The median is used to undersatand the central tendency of data, especially when the data has outlires, such as median household income.


#Median
median_age = df['Age'].median()
median_salary = df['Salary'].median()
print("median age", median_age)
print("median salary",median_salary)

     
median age 37.5
median salary 75000.0
Descriptive Statistics - Mode

Defination:

The mode is the value that appears most frequently in a dataset.(Categorical value)

Use Case:

The mode is used in retail to find the most common product sold or the most common transaction amount.


#Median
mode_age = df['Age'].mode()[0]
mode_salary = df['Salary'].mode()[0]

print("mode age", mode_age)
print("mode salary",mode_salary)

     
mode age 50
mode salary 50000
Standard Deviation:

Defination:

The standard deviation measures the amount of variation or dispersion in aset of values.it indicates how much the value differ from the mean.

Use Case:

Standard deviation is use in finance to measure the risk or volatility of an investment.

image.png

s.d = square root of summition of (xi - mu)


#std
std_age = df['Age'].std()
std_salary = df['Salary'].std()

print("std age", std_age)
print("std salary",std_salary)
     
std age 11.452801695072985
std salary 355954.67876308825
Variance:

Defination:

The variance measure the dispersion of a set of values. It is the average of the squared differences from the mean.

Use Case:

Variance is used in finance toaccess the spread between numbers in a dataset, such as investment returns.

variance = square root of std


#variance
var_age = df['Age'].var()
var_salary = df['Salary'].var()

print("var age", var_age)
print("var salary",var_salary)
     
var age 131.16666666666666
var salary 126703733333.33333
Normal Distribution: Gaussian distribution , probability based distribution

Defination: The normal distribution is a continuous distribution that is symmetrical around the mean. It is also known as the Gaussian Dstribution.

Use Case:

The normal distribution is used in finance to model returns on investment and in quality control to monitor product defects.

image.png


#Normal Distribution(Probability density function)
#ND = 1/sigma root 2 pie *e to the power (x-mu)^2/2sigma^2

import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats

mu, sigma = 0, 0.1
s=np.random.normal(mu, sigma, 1000)

#plotting the histogram

count, bins, igonered = plt.hist(s, 30, density=True)
plt.plot(bins, 1/(sigma * np.sqrt(2*np.pi))* np.exp(-(bins - mu)**2 / (2 * sigma**2)), linewidth=2, color='r')
plt.title("Normal Distribution")
plt.show()
     

Binomial Distribution:

Defination:

The binomial distribution is a discrete probability distribution that models the number of successes in a fixed number of trials, with each trial having two possible outcomes.

Use Case:

The binomial distribution is used in quality control to model the number of defective items in a batch of products.


#Binomial Distribution
n, p = 10, 0.5
binomial = np.random.binomial(n, p, 1000)
#Plotting the histogram
plt.hist(binomial, bins = 10, density=True, alpha=0.6, color='b')
plt.title("Binomial Distribution")
plt.show()
     

Quartiles

Definition • Quartiles are values that divide a dataset into four equal parts. They are used to understand the distribution of the data and are particularly useful in identifying the spread and the presence of outliers. Key Points

Q1 (First Quartile): The median of the lower half of the dataset (25th percentile).
Q2 (Second Quartile or Median): The median of the dataset (50th percentile).
Q3 (Third Quartile): The median of the upper half of the dataset (75th percentile).
IQR (Interquartile Range): The difference between the third and first quartiles (IQR = Q3- Q1). IQR is used to measure the spread of the middle 50% of the data.

import numpy as np
# Sample data
data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# Calculate Quartiles
Q1 = np.percentile(data, 25)
Q2=np.median(data)
Q3=np.percentile(data, 75)
IQR =Q3 -  Q1
print(f"Q1: {Q1}")
print(f"Q2 (Median): {Q2}")
print(f"Q3: {Q3}")
print(f"IQR: {IQR}")
     
Q1: 3.25
Q2 (Median): 5.5
Q3: 7.75
IQR: 4.5
Z-Scores

Definition:

A Z-score (or standard score) measures how many standard deviations an element is from the mean. It is used to identify outliers and to compare different data points from different normal distributions. z = x-μ/σ μ = Mean σ = Standard Deviation

Interpretation

A Z-score of 0 indicates that the data point's score is identical to the mean score.

A Z-score of 1.0 indicates a value that is one standard deviation from the mean. Z-scores can be positive or negative, indicating whether they are above or below the mean and by how many standard deviations.


#Sample data
data= [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# Calculate mean and standard deviation
mean= np.mean(data)
std_dev = np.std(data)
# Calculate 2-scores
z_scores = [(x - mean) / std_dev for x in data]
print(f"Mean: (mean)")
print(f"Standard Deviation: {std_dev}")
print("Z-scores:", z_scores)
     
Mean: (mean)
Standard Deviation: 2.8722813232690143
Z-scores: [-1.5666989036012806, -1.2185435916898848, -0.8703882797784892, -0.5222329678670935, -0.17407765595569785, 0.17407765595569785, 0.5222329678670935, 0.8703882797784892, 1.2185435916898848, 1.5666989036012806]
